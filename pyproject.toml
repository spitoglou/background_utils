[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[tool.background_utils]
log_dir_windows = "{LOCALAPPDATA}\\background-utils"
log_file = "background-utils.log"

[project]
name = "background-utils"
version = "0.1.0"
description = "Personal automation and production tools: CLIs (Typer) and services for Python 3.12+."
readme = "README.md"
requires-python = ">=3.12"
authors = [
  { name = "Owner" }
]
license = { text = "MIT" }
dependencies = [
  "typer[all]>=0.12",
  "rich>=13.7",
  "pydantic>=2.8",
  "pydantic-settings>=2.4",
  "loguru>=0.7",
  "psutil>=5.9",
  "pystray>=0.19",
  "Pillow>=10.0",
  "pywin32>=306; platform_system == 'Windows'",
  "plyer>=2.1",
  "win10toast>=0.9; platform_system == 'Windows'",
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2",
  "pytest-cov>=5.0",
  "ruff>=0.5.0",
  "mypy>=1.10",
  "types-requests",
]

[project.scripts]
background-utils = "background_utils.cli.app:main"

# Combined manager (runs all services)
background-utils-service = "background_utils.services.manager:main"

# Individual services
background-utils-service-example = "background_utils.services.example_service:main"
background-utils-service-battery = "background_utils.services.battery_monitor:main"
background-utils-service-gmail = "background_utils.services.gmail_notifier:main"
background-utils-service-my = "background_utils.services.my_service:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B"]
ignore = []

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_configs = true
warn_unreachable = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]